1. 배열 불변성
const obj = {
	userid: 1,
	post: []
}
	↓reducer
...prevState
post: [...obj.post, action.data]

2. 순수함수
=> 함수가 매개변수 빼고 참조하지 않는 함수
-> 예시
- reducer 함수


3. redux 폴더구조
=> js파일
- reducer.js
- action.js(action creator)

=> 더 많아질경우 폴더에 담아서

-> actions(종류에 따라서 구분)
- 사용자 위주 액션 -> user.js
- 게시글 위주 액션 -> post.js

-> reducers
- 대표적인것 -> index.js

4. module.exports
Require()함수는 module.exports를 리턴

5. 객체안에서 덩치가 클것같은 것들은 바깥으로 뺌
const initialState = {
	user: {
		isLoggingIn: true,
		data: null
	},
	post:[],
	comments: [],
	favorites:[],
	history:[],
	likes:[],
	followers:[],

}
=> 구조상 필요없는 정보까지 조회하게됨
-> post안에 comment를 넣을경우 post를 조회를 먼저하게 됨(필요없는 정보 조회)
=> 데이터를 한페이지(화면에 보이는 정도)만 보이는것을 가져와야함
=> 전체를 다가져오면 메모리 많이 차지함